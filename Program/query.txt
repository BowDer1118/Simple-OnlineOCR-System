# 引入所需的模組
import asyncio
import websockets
import json
import configparser

#用來輸出訊息的文字
def display_message(self, message: str):
        # 顯示帶有時間戳的訊息
        current_time = datetime.now().strftime("%Y-%m-%d %H:%M:%S.%f")
        #輸出訊息
        pass

# 建立WebSocket伺服器處理函式
async def server(websocket, path):
    try:
        # 無窮迴圈，讓伺服器持續運作
        while True:
            # 從WebSocket接收訊息
            message = await websocket.recv()

            # 將訊息轉換為JSON
            message_json = json.loads(message)
            
            # 組裝要傳送的 JSON 物件
            data = {
                "ResponseMessage":"SUCCESS",
                "ImageFileName": message_json['ImageFileName'],
                "OcrResult": "假裝完成OCR任務了"
            }

            # 回傳處理結果
            await websocket.send(json.dumps(data))
    except Exception as e:
        print(f"客戶端主動關閉連線!")

if __name__=='__main__':
    # 讀取設定檔
    config = configparser.ConfigParser()
    config.read('settings/websocket_settings.ini')

    # 取得主機和端口
    host = config.get('WebSocket', 'host')
    port = config.get('WebSocket', 'port')

    # WebSocket伺服器
    start_server = websockets.serve(server, host, port)

    # 將協程加入事件迴圈
    asyncio.get_event_loop().run_until_complete(start_server)
    #讓事件迴圈一直執行(這操作會阻塞主線程)
    asyncio.get_event_loop().run_forever()


以上是我的目前的程式碼，你能幫我新增一些功能嗎?需求如下:
1.請幫我設計一個Class叫做ClientInfo，裡面保存以下資料
(1)client_name:str
(2)client_uuid:str
(3)image_file_names:set
2.請幫我在全局變量中建立一個dictionary叫做clients，指定key-value資料型別為 key:uuid字串 , value:ClientInfo物件
3.請幫我擴充WebSocket伺服器的功能，對客戶端的處理任務如下:
當新的客戶端連線到伺服器時:為客戶端生成一個uuid字串，這個uuid字串必須包含時間資訊，舉例來說:當客戶端在2023年4月1日的凌晨2點9分3秒連線到伺服器，則uuid字串的格式應為2023-04-01-02-09-03-[隨機生成出來的uuid]。
接著，解析來自客戶端傳來的JSON資料，客戶端傳送的JSON如下:
{
    "ClientName":"客戶端名稱"
}
然後，創建一個ClientInfo物件，並填入client_uuid和client_name，最後將uuid和ClientInfo物件加入到clients字典中。最後調用display_message並傳入"已接受客戶端名稱: {ClientInfo.client_name}的連線請求!"

最後，請你回答我完整的程式碼，並使用繁體中文對程式碼進行註解。